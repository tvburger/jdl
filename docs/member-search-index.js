memberSearchIndex = [{"p":"net.tvburger.jdl.model.nn","c":"DefaultNeuralNetwork","l":"accept(NeuronVisitor)","u":"accept(net.tvburger.jdl.model.nn.NeuronVisitor)"},{"p":"net.tvburger.jdl.model.nn","c":"NeuralNetwork","l":"accept(NeuronVisitor)","u":"accept(net.tvburger.jdl.model.nn.NeuronVisitor)"},{"p":"net.tvburger.jdl.model.nn","c":"ActivationsCachedNeuron","l":"activate()"},{"p":"net.tvburger.jdl.model.nn","c":"LastInputStoredNeuron","l":"activate()"},{"p":"net.tvburger.jdl.model.nn","c":"Neuron","l":"activate()"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"ActivationFunction","l":"activate(float)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Linear","l":"activate(float)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"ReLU","l":"activate(float)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Sigmoid","l":"activate(float)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Step","l":"activate(float)"},{"p":"net.tvburger.jdl.model.nn","c":"ActivationsCachedNeuron.Activation","l":"Activation(float[], float, float[])","u":"%3Cinit%3E(float[],float,float[])"},{"p":"net.tvburger.jdl.model.nn","c":"ActivationsCachedNeuron","l":"ActivationsCachedNeuron(String, List<? extends Neuron>, ActivationFunction)","u":"%3Cinit%3E(java.lang.String,java.util.List,net.tvburger.jdl.model.scalars.activations.ActivationFunction)"},{"p":"net.tvburger.jdl.adaline","c":"AdalineInitializer","l":"AdalineInitializer()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.adaline","c":"AdalineLineMain","l":"AdalineLineMain()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.adaline","c":"AdalineMain","l":"AdalineMain()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"AdamOptimizer()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"addSample(DataSet.Sample)","u":"addSample(net.tvburger.jdl.model.DataSet.Sample)"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"addSample(float[], float[])","u":"addSample(float[],float[])"},{"p":"net.tvburger.jdl.common.utils","c":"SimpleHolder","l":"adjust(Function<K, K>)","u":"adjust(java.util.function.Function)"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearModel","l":"adjustBias(float)"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearModel","l":"adjustWeight(int, float)","u":"adjustWeight(int,float)"},{"p":"net.tvburger.jdl.datasets","c":"LogicalDataSets","l":"and()"},{"p":"net.tvburger.jdl.knn","c":"NearestNeighbors","l":"arity()"},{"p":"net.tvburger.jdl.model","c":"EstimationFunction","l":"arity()"},{"p":"net.tvburger.jdl.model.nn","c":"DefaultNeuralNetwork","l":"arity()"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearModel","l":"arity()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime","l":"asRegime(Class<R>)","u":"asRegime(java.lang.Class)"},{"p":"net.tvburger.jdl.perceptron","c":"AssociationUnit","l":"AssociationUnit(String, List<Neuron>)","u":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"batch()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"Regimes","l":"batch()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"BatchRegime","l":"BatchRegime()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"BatchRegime","l":"BatchRegime(Regime)","u":"%3Cinit%3E(net.tvburger.jdl.model.training.Regime)"},{"p":"net.tvburger.jdl.model.training.loss","c":"Losses","l":"bCE()"},{"p":"net.tvburger.jdl.common.patterns","c":"DesignPattern.Category","l":"BEHAVIORAL"},{"p":"net.tvburger.jdl.model.training.loss","c":"BinaryCrossEntropy","l":"BinaryCrossEntropy()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.TopDownChainer","l":"bottomChain()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.BottomUpChainer","l":"BottomUpChainer()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"build()"},{"p":"net.tvburger.jdl.model.training.loss","c":"BatchLossFunction","l":"calculateBatchLoss(List<Float>)","u":"calculateBatchLoss(java.util.List)"},{"p":"net.tvburger.jdl.model.training.loss","c":"MeanError","l":"calculateBatchLoss(List<Float>)","u":"calculateBatchLoss(java.util.List)"},{"p":"net.tvburger.jdl.model.training.loss","c":"ScaledError","l":"calculateBatchLoss(List<Float>)","u":"calculateBatchLoss(java.util.List)"},{"p":"net.tvburger.jdl.model.training.loss","c":"SummedError","l":"calculateBatchLoss(List<Float>)","u":"calculateBatchLoss(java.util.List)"},{"p":"net.tvburger.jdl.model.training.loss","c":"BinaryCrossEntropy","l":"calculateDimensionLoss(float, float)","u":"calculateDimensionLoss(float,float)"},{"p":"net.tvburger.jdl.model.training.loss","c":"DimensionLossFunction","l":"calculateDimensionLoss(float, float)","u":"calculateDimensionLoss(float,float)"},{"p":"net.tvburger.jdl.model.training.loss","c":"ScaledError","l":"calculateDimensionLoss(float, float)","u":"calculateDimensionLoss(float,float)"},{"p":"net.tvburger.jdl.model.training.loss","c":"SquaredError","l":"calculateDimensionLoss(float, float)","u":"calculateDimensionLoss(float,float)"},{"p":"net.tvburger.jdl.model.training","c":"ObjectiveFunction","l":"calculateGradient_dJ_da(int, float[], float[])","u":"calculateGradient_dJ_da(int,float[],float[])"},{"p":"net.tvburger.jdl.model.training","c":"ObjectiveFunctionImpl","l":"calculateGradient_dJ_da(int, float[], float[])","u":"calculateGradient_dJ_da(int,float[],float[])"},{"p":"net.tvburger.jdl.model.training.loss","c":"BatchLossFunction","l":"calculateGradient_dJ_dL(int)"},{"p":"net.tvburger.jdl.model.training.loss","c":"MeanError","l":"calculateGradient_dJ_dL(int)"},{"p":"net.tvburger.jdl.model.training.loss","c":"ScaledError","l":"calculateGradient_dJ_dL(int)"},{"p":"net.tvburger.jdl.model.training.loss","c":"SummedError","l":"calculateGradient_dJ_dL(int)"},{"p":"net.tvburger.jdl.model.training.loss","c":"BinaryCrossEntropy","l":"calculateGradient_dl_da(float, float)","u":"calculateGradient_dl_da(float,float)"},{"p":"net.tvburger.jdl.model.training.loss","c":"DimensionLossFunction","l":"calculateGradient_dl_da(float, float)","u":"calculateGradient_dl_da(float,float)"},{"p":"net.tvburger.jdl.model.training.loss","c":"ScaledError","l":"calculateGradient_dl_da(float, float)","u":"calculateGradient_dl_da(float,float)"},{"p":"net.tvburger.jdl.model.training.loss","c":"SquaredError","l":"calculateGradient_dl_da(float, float)","u":"calculateGradient_dl_da(float,float)"},{"p":"net.tvburger.jdl.model.training.loss","c":"MeanError","l":"calculateGradient_dL_dl(int)"},{"p":"net.tvburger.jdl.model.training.loss","c":"SampleLossFunction","l":"calculateGradient_dL_dl(int)"},{"p":"net.tvburger.jdl.model.training.loss","c":"ScaledError","l":"calculateGradient_dL_dl(int)"},{"p":"net.tvburger.jdl.model.training.loss","c":"SummedError","l":"calculateGradient_dL_dl(int)"},{"p":"net.tvburger.jdl.model.training","c":"ObjectiveFunction","l":"calculateLoss(List<Pair<float[], float[]>>)","u":"calculateLoss(java.util.List)"},{"p":"net.tvburger.jdl.model.training","c":"ObjectiveFunctionImpl","l":"calculateLoss(List<Pair<float[], float[]>>)","u":"calculateLoss(java.util.List)"},{"p":"net.tvburger.jdl.model.scalars","c":"NeuronFunction","l":"calculateParameterGradients_df_dp(float[])"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearCombination","l":"calculateParameterGradients(float[])"},{"p":"net.tvburger.jdl.model.scalars","c":"NeuronFunction","l":"calculateParameterGradients(float[])"},{"p":"net.tvburger.jdl.model.scalars","c":"TrainableScalarFunction","l":"calculateParameterGradients(float[])"},{"p":"net.tvburger.jdl.model.training.loss","c":"MeanError","l":"calculateSampleLoss(List<Float>)","u":"calculateSampleLoss(java.util.List)"},{"p":"net.tvburger.jdl.model.training.loss","c":"SampleLossFunction","l":"calculateSampleLoss(List<Float>)","u":"calculateSampleLoss(java.util.List)"},{"p":"net.tvburger.jdl.model.training.loss","c":"ScaledError","l":"calculateSampleLoss(List<Float>)","u":"calculateSampleLoss(java.util.List)"},{"p":"net.tvburger.jdl.model.training.loss","c":"SummedError","l":"calculateSampleLoss(List<Float>)","u":"calculateSampleLoss(java.util.List)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"Regimes","l":"chainBottom()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime","l":"ChainedRegime(List<Regime>)","u":"%3Cinit%3E(java.util.List)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime","l":"chainedRegimes"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.BottomUpChainer","l":"chainRegime(Regime)","u":"chainRegime(net.tvburger.jdl.model.training.Regime)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"chainRegime(Regime)","u":"chainRegime(net.tvburger.jdl.model.training.Regime)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.TopDownChainer","l":"chainRegime(Regime)","u":"chainRegime(net.tvburger.jdl.model.training.Regime)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"Regimes","l":"chainTop()"},{"p":"net.tvburger.jdl.adaline","c":"Adaline","l":"classify(float[])"},{"p":"net.tvburger.jdl.common.utils","c":"SimpleHolder","l":"clear()"},{"p":"net.tvburger.jdl.model.nn","c":"ActivationsCachedNeuron","l":"clearCache()"},{"p":"net.tvburger.jdl.model.nn","c":"LastInputStoredNeuron","l":"clearStoredInputs()"},{"p":"net.tvburger.jdl.knn","c":"NearestNeighbors","l":"coArity()"},{"p":"net.tvburger.jdl.model","c":"EstimationFunction","l":"coArity()"},{"p":"net.tvburger.jdl.model.nn","c":"DefaultNeuralNetwork","l":"coArity()"},{"p":"net.tvburger.jdl.model.scalars","c":"ScalarEstimationFunction","l":"coArity()"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"compatible(EstimationFunction)","u":"compatible(net.tvburger.jdl.model.EstimationFunction)"},{"p":"net.tvburger.jdl.common.patterns","c":"Strategy.Role","l":"CONCRETE"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"NeuralNetworkInitializers","l":"constant(float)"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"ConstantInitializer","l":"ConstantInitializer(float)","u":"%3Cinit%3E(float)"},{"p":"net.tvburger.jdl.common.utils","c":"SimpleHolder","l":"create()"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"create()"},{"p":"net.tvburger.jdl.mlp","c":"MultiLayerPerceptron","l":"create(ActivationFunction, ActivationFunction, int...)","u":"create(net.tvburger.jdl.model.scalars.activations.ActivationFunction,net.tvburger.jdl.model.scalars.activations.ActivationFunction,int...)"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearCombination","l":"create(int)"},{"p":"net.tvburger.jdl.adaline","c":"Adaline","l":"create(int, int)","u":"create(int,int)"},{"p":"net.tvburger.jdl.perceptron","c":"Perceptron","l":"create(int, int)","u":"create(int,int)"},{"p":"net.tvburger.jdl.perceptron","c":"Perceptron","l":"create(int, int, int)","u":"create(int,int,int)"},{"p":"net.tvburger.jdl.perceptron","c":"Perceptron","l":"create(int, int, int, ActivationFunction)","u":"create(int,int,int,net.tvburger.jdl.model.scalars.activations.ActivationFunction)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ObjectiveReportingRegime","l":"create(Regime)","u":"create(net.tvburger.jdl.model.training.Regime)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"StopIfNoImprovementRegime","l":"create(Regime, int, float, boolean)","u":"create(net.tvburger.jdl.model.training.Regime,int,float,boolean)"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"DataSet(List<DataSet.Sample>)","u":"%3Cinit%3E(java.util.List)"},{"p":"net.tvburger.jdl.model.nn","c":"Neuron","l":"deactivate()"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"DEFAULT_BETA1"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"DEFAULT_BETA2"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"DEFAULT_EPSILON"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"DEFAULT_LEARNING_RATE"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"StochasticGradientDescent","l":"DEFAULT_LEARNING_RATE"},{"p":"net.tvburger.jdl.model.nn","c":"DefaultNeuralNetwork","l":"DefaultNeuralNetwork(List<List<? extends Neuron>>)","u":"%3Cinit%3E(java.util.List)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"DelegatedRegime","l":"DelegatedRegime(Regime)","u":"%3Cinit%3E(net.tvburger.jdl.model.training.Regime)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"ActivationFunction","l":"determineGradientForOutput(float)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Linear","l":"determineGradientForOutput(float)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"ReLU","l":"determineGradientForOutput(float)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Sigmoid","l":"determineGradientForOutput(float)"},{"p":"net.tvburger.jdl.model.distances","c":"DistanceMetric","l":"distance(float[], float[])","u":"distance(float[],float[])"},{"p":"net.tvburger.jdl.model.distances","c":"EuclideanDistance","l":"distance(float[], float[])","u":"distance(float[],float[])"},{"p":"net.tvburger.jdl.common.patterns","c":"DesignPattern.Category","l":"DOMAIN_LANGUAGE"},{"p":"net.tvburger.jdl.model.nn","c":"NeuralNetworks","l":"dump(NeuralNetwork)","u":"dump(net.tvburger.jdl.model.nn.NeuralNetwork)"},{"p":"net.tvburger.jdl.model.nn","c":"NeuralNetworks","l":"dump(NeuralNetwork, boolean)","u":"dump(net.tvburger.jdl.model.nn.NeuralNetwork,boolean)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"dumpNodes()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"dumpNodes(boolean)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"dumpNodes(boolean, boolean)","u":"dumpNodes(boolean,boolean)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"DumpNodesRegime","l":"DumpNodesRegime(Regime, boolean, boolean)","u":"%3Cinit%3E(net.tvburger.jdl.model.training.Regime,boolean,boolean)"},{"p":"net.tvburger.jdl.common.utils","c":"Floats","l":"EMPTY"},{"p":"net.tvburger.jdl.model.nn","c":"NeuronVisitor","l":"enterLayer(NeuralNetwork, int)","u":"enterLayer(net.tvburger.jdl.model.nn.NeuralNetwork,int)"},{"p":"net.tvburger.jdl.model.nn","c":"NeuronVisitor","l":"enterNetwork(NeuralNetwork)","u":"enterNetwork(net.tvburger.jdl.model.nn.NeuralNetwork)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"EpochRegime","l":"EpochRegime(Regime, int)","u":"%3Cinit%3E(net.tvburger.jdl.model.training.Regime,int)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"epochs()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"epochs(int)"},{"p":"net.tvburger.jdl.common.utils","c":"Floats","l":"EPSILON"},{"p":"net.tvburger.jdl.common.utils","c":"Floats","l":"equals(float, float)","u":"equals(float,float)"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"net.tvburger.jdl.model","c":"DataSet.Sample","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"net.tvburger.jdl.model.nn","c":"ActivationsCachedNeuron.Activation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"net.tvburger.jdl.model.nn","c":"DefaultNeuralNetwork","l":"estimate(float...)"},{"p":"net.tvburger.jdl.knn","c":"NearestNeighbors","l":"estimate(float[])"},{"p":"net.tvburger.jdl.model","c":"EstimationFunction","l":"estimate(float[])"},{"p":"net.tvburger.jdl.model.scalars","c":"ScalarEstimationFunction","l":"estimate(float[])"},{"p":"net.tvburger.jdl.model.nn","c":"InputNeuron","l":"estimateScalar(float[])"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearCombination","l":"estimateScalar(float[])"},{"p":"net.tvburger.jdl.model.scalars","c":"NeuronFunction","l":"estimateScalar(float[])"},{"p":"net.tvburger.jdl.model.scalars","c":"ScalarEstimationFunction","l":"estimateScalar(float[])"},{"p":"net.tvburger.jdl.model.distances","c":"Metrics","l":"euclidean()"},{"p":"net.tvburger.jdl.model.distances","c":"EuclideanDistance","l":"EuclideanDistance()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.nn","c":"NeuronVisitor","l":"exitLayer(NeuralNetwork, int)","u":"exitLayer(net.tvburger.jdl.model.nn.NeuralNetwork,int)"},{"p":"net.tvburger.jdl.model.nn","c":"NeuronVisitor","l":"exitNetwork(NeuralNetwork)","u":"exitNetwork(net.tvburger.jdl.model.nn.NeuralNetwork)"},{"p":"net.tvburger.jdl.common.patterns","c":"DesignPattern.Category","l":"EXTENSIBILITY"},{"p":"net.tvburger.jdl.model","c":"DataSet.Sample","l":"featureCount()"},{"p":"net.tvburger.jdl.model","c":"DataSet.Sample","l":"features()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime","l":"findRegime(Predicate<? super Regime>)","u":"findRegime(java.util.function.Predicate)"},{"p":"net.tvburger.jdl.common.utils","c":"SimpleHolder","l":"get()"},{"p":"net.tvburger.jdl.model.scalars","c":"NeuronFunction","l":"getActivationFunction()"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"getBeta1()"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"getBeta2()"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearModel","l":"getBias()"},{"p":"net.tvburger.jdl.model.nn","c":"ActivationsCachedNeuron","l":"getCache()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ObjectiveReportingRegime","l":"getCurrentLoss()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"StopIfNoImprovementRegime","l":"getCurrentStalled()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"DelegatedRegime","l":"getDelegatedRegime()"},{"p":"net.tvburger.jdl.model.nn","c":"DefaultNeuralNetwork","l":"getDepth()"},{"p":"net.tvburger.jdl.model.nn","c":"NeuralNetwork","l":"getDepth()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"EpochRegime","l":"getEpochs()"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"getEpsilon()"},{"p":"net.tvburger.jdl.common.patterns","c":"DesignPattern.Category","l":"getExplanation()"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"getFeatureCount()"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Step","l":"getHighValue()"},{"p":"net.tvburger.jdl.model.training","c":"Trainer","l":"getInitializer()"},{"p":"net.tvburger.jdl.model.training","c":"TrainerImpl","l":"getInitializer()"},{"p":"net.tvburger.jdl.model.nn","c":"Neuron","l":"getInputNodes()"},{"p":"net.tvburger.jdl.model.nn","c":"Neuron","l":"getInputValues()"},{"p":"net.tvburger.jdl.knn","c":"NearestNeighbors","l":"getK()"},{"p":"net.tvburger.jdl.adaline","c":"LeastMeanSquares","l":"getLearningRate()"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"getLearningRate()"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"StochasticGradientDescent","l":"getLearningRate()"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Step","l":"getLowValue()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"StopIfNoImprovementRegime","l":"getMaxStalledEpochs()"},{"p":"net.tvburger.jdl.knn","c":"NearestNeighbors","l":"getMemory()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"StopIfNoImprovementRegime","l":"getMinImprovement()"},{"p":"net.tvburger.jdl.model.nn","c":"Neuron","l":"getName()"},{"p":"net.tvburger.jdl.model.nn","c":"DefaultNeuralNetwork","l":"getNeuron(int, int)","u":"getNeuron(int,int)"},{"p":"net.tvburger.jdl.model.nn","c":"NeuralNetwork","l":"getNeuron(int, int)","u":"getNeuron(int,int)"},{"p":"net.tvburger.jdl.model.nn","c":"DefaultNeuralNetwork","l":"getNeuron(int, int, Class<N>)","u":"getNeuron(int,int,java.lang.Class)"},{"p":"net.tvburger.jdl.model.nn","c":"NeuralNetwork","l":"getNeuron(int, int, Class<N>)","u":"getNeuron(int,int,java.lang.Class)"},{"p":"net.tvburger.jdl.model.nn","c":"NeuralNetworks","l":"getNeuronConnections(List<List<? extends Neuron>>)","u":"getNeuronConnections(java.util.List)"},{"p":"net.tvburger.jdl.model.nn","c":"NeuralNetworks","l":"getNeuronPositions(List<List<? extends Neuron>>)","u":"getNeuronPositions(java.util.List)"},{"p":"net.tvburger.jdl.model.training","c":"Trainer","l":"getObjective()"},{"p":"net.tvburger.jdl.model.training","c":"TrainerImpl","l":"getObjective()"},{"p":"net.tvburger.jdl.model.training","c":"Trainer","l":"getOptimizer()"},{"p":"net.tvburger.jdl.model.training","c":"TrainerImpl","l":"getOptimizer()"},{"p":"net.tvburger.jdl.model.nn","c":"Neuron","l":"getOutput()"},{"p":"net.tvburger.jdl.model.nn","c":"DefaultNeuralNetwork","l":"getOutputConnections(int, int)","u":"getOutputConnections(int,int)"},{"p":"net.tvburger.jdl.model.nn","c":"NeuralNetwork","l":"getOutputConnections(int, int)","u":"getOutputConnections(int,int)"},{"p":"net.tvburger.jdl.model.training","c":"TrainableFunction","l":"getParameter(int)"},{"p":"net.tvburger.jdl.model.nn","c":"DefaultNeuralNetwork","l":"getParameterCount()"},{"p":"net.tvburger.jdl.model.nn","c":"NeuralNetwork","l":"getParameterCount()"},{"p":"net.tvburger.jdl.model.training","c":"TrainableFunction","l":"getParameterCount()"},{"p":"net.tvburger.jdl.model.nn","c":"DefaultNeuralNetwork","l":"getParameters()"},{"p":"net.tvburger.jdl.model.nn","c":"NeuralNetwork","l":"getParameters()"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearModel","l":"getParameters()"},{"p":"net.tvburger.jdl.model.training","c":"TrainableFunction","l":"getParameters()"},{"p":"net.tvburger.jdl.model.training","c":"Trainer","l":"getRegime()"},{"p":"net.tvburger.jdl.model.training","c":"TrainerImpl","l":"getRegime()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime","l":"getRegime(Class<R>)","u":"getRegime(java.lang.Class)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ObjectiveReportingRegime","l":"getRelativeImprovement()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"MiniBatchRegime","l":"getSamplesPerLearning()"},{"p":"net.tvburger.jdl.model.nn","c":"LastInputStoredNeuron","l":"getStoredInput(int)"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"getTargetCount()"},{"p":"net.tvburger.jdl.model.nn","c":"DefaultNeuralNetwork","l":"getTargetNeurons(Neuron)","u":"getTargetNeurons(net.tvburger.jdl.model.nn.Neuron)"},{"p":"net.tvburger.jdl.model.nn","c":"NeuralNetwork","l":"getTargetNeurons(Neuron)","u":"getTargetNeurons(net.tvburger.jdl.model.nn.Neuron)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Step","l":"getThreshold()"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearModel","l":"getWeight(int)"},{"p":"net.tvburger.jdl.model.nn","c":"Neuron","l":"getWeight(Neuron)","u":"getWeight(net.tvburger.jdl.model.nn.Neuron)"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearModel","l":"getWeights()"},{"p":"net.tvburger.jdl.model.nn","c":"DefaultNeuralNetwork","l":"getWidth(int)"},{"p":"net.tvburger.jdl.model.nn","c":"NeuralNetwork","l":"getWidth(int)"},{"p":"net.tvburger.jdl.common.utils","c":"Floats","l":"greaterThan(float, float)","u":"greaterThan(float,float)"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"hashCode()"},{"p":"net.tvburger.jdl.model","c":"DataSet.Sample","l":"hashCode()"},{"p":"net.tvburger.jdl.model.nn","c":"ActivationsCachedNeuron.Activation","l":"hashCode()"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"NeuralNetworkInitializers","l":"he()"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"HeInitializer","l":"HeInitializer()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.common.patterns","c":"DesignPattern.Category","l":"HELPER_STRUCTURES"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Activations","l":"identity()"},{"p":"net.tvburger.jdl.common.utils","c":"Pair","l":"immutable(L, R)","u":"immutable(L,R)"},{"p":"net.tvburger.jdl.model.training","c":"Initializer","l":"initialize(E)"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"NeuralNetworkInitializer","l":"initialize(NeuralNetwork)","u":"initialize(net.tvburger.jdl.model.nn.NeuralNetwork)"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"NeuralNetworkInitializer","l":"initialize(NeuralNetwork, Neuron)","u":"initialize(net.tvburger.jdl.model.nn.NeuralNetwork,net.tvburger.jdl.model.nn.Neuron)"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"XavierInitializer","l":"initialize(NeuralNetwork, Neuron)","u":"initialize(net.tvburger.jdl.model.nn.NeuralNetwork,net.tvburger.jdl.model.nn.Neuron)"},{"p":"net.tvburger.jdl.adaline","c":"AdalineInitializer","l":"initialize(Neuron)","u":"initialize(net.tvburger.jdl.model.nn.Neuron)"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"ConstantInitializer","l":"initialize(Neuron)","u":"initialize(net.tvburger.jdl.model.nn.Neuron)"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"HeInitializer","l":"initialize(Neuron)","u":"initialize(net.tvburger.jdl.model.nn.Neuron)"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"NeuralNetworkInitializer","l":"initialize(Neuron)","u":"initialize(net.tvburger.jdl.model.nn.Neuron)"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"RandomNormalizedWeightInitializer","l":"initialize(Neuron)","u":"initialize(net.tvburger.jdl.model.nn.Neuron)"},{"p":"net.tvburger.jdl.perceptron","c":"PerceptronInitializer","l":"initialize(Neuron)","u":"initialize(net.tvburger.jdl.model.nn.Neuron)"},{"p":"net.tvburger.jdl.model.nn","c":"InputNeuron","l":"InputNeuron(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"net.tvburger.jdl.model.nn","c":"ActivationsCachedNeuron.Activation","l":"inputs()"},{"p":"net.tvburger.jdl.common.patterns","c":"Strategy.Role","l":"INTERFACE"},{"p":"net.tvburger.jdl.model.nn","c":"Neuron","l":"isActivated()"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"isCompatibleWith(EstimationFunction)","u":"isCompatibleWith(net.tvburger.jdl.model.EstimationFunction)"},{"p":"net.tvburger.jdl.model","c":"DataSet.Sample","l":"isCompatibleWith(EstimationFunction)","u":"isCompatibleWith(net.tvburger.jdl.model.EstimationFunction)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ObjectiveReportingRegime","l":"isDumpingLossValues()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"DumpNodesRegime","l":"isFirstTime()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"DumpNodesRegime","l":"isIncludeInputs()"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"iterator()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime","l":"iterator()"},{"p":"net.tvburger.jdl.knn","c":"KnnMain","l":"KnnMain()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.nn.regularizers","c":"L2Regularization","l":"L2Regularization()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.nn","c":"LastInputStoredNeuron","l":"LastInputStoredNeuron(String, List<? extends Neuron>, ActivationFunction)","u":"%3Cinit%3E(java.lang.String,java.util.List,net.tvburger.jdl.model.scalars.activations.ActivationFunction)"},{"p":"net.tvburger.jdl.adaline","c":"LeastMeanSquares","l":"LeastMeanSquares(float)","u":"%3Cinit%3E(float)"},{"p":"net.tvburger.jdl.common.utils","c":"Pair","l":"left()"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Activations","l":"linear()"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Linear","l":"Linear()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearCombination","l":"LinearCombination(float[])","u":"%3Cinit%3E(float[])"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearModel","l":"LinearModel(float[])","u":"%3Cinit%3E(float[])"},{"p":"net.tvburger.jdl.datasets","c":"LinesAndCircles","l":"LinesAndCircles()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.datasets","c":"LinesAndCircles","l":"load()"},{"p":"net.tvburger.jdl.datasets","c":"StraightLineWithNoise","l":"load()"},{"p":"net.tvburger.jdl.model","c":"DataSet.Loader","l":"load()"},{"p":"net.tvburger.jdl.adaline","c":"AdalineLineMain","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"net.tvburger.jdl.adaline","c":"AdalineMain","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"net.tvburger.jdl.knn","c":"KnnMain","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"net.tvburger.jdl.mlp","c":"MLPMain","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"net.tvburger.jdl.perceptron","c":"Mark1","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"net.tvburger.jdl.perceptron","c":"Mark1","l":"Mark1()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.training.loss","c":"MeanError","l":"MeanError()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"miniBatch()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"miniBatch(int)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"Regimes","l":"miniBatch(int)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"MiniBatchRegime","l":"MiniBatchRegime(int)","u":"%3Cinit%3E(int)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"MiniBatchRegime","l":"MiniBatchRegime(Regime, int)","u":"%3Cinit%3E(net.tvburger.jdl.model.training.Regime,int)"},{"p":"net.tvburger.jdl.model.training","c":"ObjectiveFunction","l":"minimize(BatchLossFunction, SampleLossFunction, DimensionLossFunction...)","u":"minimize(net.tvburger.jdl.model.training.loss.BatchLossFunction,net.tvburger.jdl.model.training.loss.SampleLossFunction,net.tvburger.jdl.model.training.loss.DimensionLossFunction...)"},{"p":"net.tvburger.jdl.mlp","c":"MLPMain","l":"MLPMain()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"Modifiable()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.training.loss","c":"Losses","l":"mSE()"},{"p":"net.tvburger.jdl.common.utils","c":"Pair","l":"mutable(L, R)","u":"mutable(L,R)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"ActivationFunction","l":"name()"},{"p":"net.tvburger.jdl.knn","c":"NearestNeighbors","l":"NearestNeighbors(int, DistanceMetric, NeighborWeighting)","u":"%3Cinit%3E(int,net.tvburger.jdl.model.distances.DistanceMetric,net.tvburger.jdl.knn.NeighborWeighting)"},{"p":"net.tvburger.jdl.knn","c":"NearestNeighborsPreparer","l":"NearestNeighborsPreparer()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.nn","c":"Neuron","l":"Neuron(String, List<? extends Neuron>, ActivationFunction)","u":"%3Cinit%3E(java.lang.String,java.util.List,net.tvburger.jdl.model.scalars.activations.ActivationFunction)"},{"p":"net.tvburger.jdl.model.scalars","c":"NeuronFunction","l":"NeuronFunction(float[], ActivationFunction)","u":"%3Cinit%3E(float[],net.tvburger.jdl.model.scalars.activations.ActivationFunction)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Activations","l":"none()"},{"p":"net.tvburger.jdl.common.utils","c":"Floats","l":"notEquals(float, float)","u":"notEquals(float,float)"},{"p":"net.tvburger.jdl.common.patterns","c":"DesignPattern.Category","l":"OBJECT_GRAPH"},{"p":"net.tvburger.jdl.model.training","c":"ObjectiveFunctionImpl","l":"ObjectiveFunctionImpl(BatchLossFunction, SampleLossFunction, List<DimensionLossFunction>)","u":"%3Cinit%3E(net.tvburger.jdl.model.training.loss.BatchLossFunction,net.tvburger.jdl.model.training.loss.SampleLossFunction,java.util.List)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ObjectiveReportingRegime","l":"ObjectiveReportingRegime(Regime, boolean)","u":"%3Cinit%3E(net.tvburger.jdl.model.training.Regime,boolean)"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"of(DataSet.Sample...)","u":"of(net.tvburger.jdl.model.DataSet.Sample...)"},{"p":"net.tvburger.jdl.common.utils","c":"Floats","l":"of(float...)"},{"p":"net.tvburger.jdl.model","c":"DataSet.Sample","l":"of(float[], float[])","u":"of(float[],float[])"},{"p":"net.tvburger.jdl.model.training","c":"Trainer","l":"of(Initializer<? super E>, ObjectiveFunction, Optimizer<? super E>, Regime)","u":"of(net.tvburger.jdl.model.training.Initializer,net.tvburger.jdl.model.training.ObjectiveFunction,net.tvburger.jdl.model.training.Optimizer,net.tvburger.jdl.model.training.Regime)"},{"p":"net.tvburger.jdl.common.utils","c":"Pair","l":"of(L, R)","u":"of(L,R)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"online()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"Regimes","l":"online()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"OnlineRegime","l":"OnlineRegime()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"OnlineRegime","l":"OnlineRegime(Regime)","u":"%3Cinit%3E(net.tvburger.jdl.model.training.Regime)"},{"p":"net.tvburger.jdl.adaline","c":"LeastMeanSquares","l":"optimize(Adaline, DataSet.Sample, ObjectiveFunction)","u":"optimize(net.tvburger.jdl.adaline.Adaline,net.tvburger.jdl.model.DataSet.Sample,net.tvburger.jdl.model.training.ObjectiveFunction)"},{"p":"net.tvburger.jdl.model.training","c":"Optimizer.OnlineOnly","l":"optimize(E, DataSet, ObjectiveFunction)","u":"optimize(E,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction)"},{"p":"net.tvburger.jdl.model.training","c":"Optimizer","l":"optimize(E, DataSet, ObjectiveFunction)","u":"optimize(E,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction)"},{"p":"net.tvburger.jdl.model.training","c":"Optimizer.OnlineOnly","l":"optimize(E, DataSet.Sample, ObjectiveFunction)","u":"optimize(E,net.tvburger.jdl.model.DataSet.Sample,net.tvburger.jdl.model.training.ObjectiveFunction)"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"optimize(N, DataSet, ObjectiveFunction)","u":"optimize(N,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction)"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"StochasticGradientDescent","l":"optimize(N, DataSet, ObjectiveFunction)","u":"optimize(N,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction)"},{"p":"net.tvburger.jdl.perceptron","c":"PerceptronUpdateRule","l":"optimize(Perceptron, DataSet.Sample, ObjectiveFunction)","u":"optimize(net.tvburger.jdl.perceptron.Perceptron,net.tvburger.jdl.model.DataSet.Sample,net.tvburger.jdl.model.training.ObjectiveFunction)"},{"p":"net.tvburger.jdl.datasets","c":"LogicalDataSets","l":"or()"},{"p":"net.tvburger.jdl.model.nn","c":"ActivationsCachedNeuron.Activation","l":"output()"},{"p":"net.tvburger.jdl.model.nn","c":"ActivationsCachedNeuron.Activation","l":"parameterGradients()"},{"p":"net.tvburger.jdl.perceptron","c":"PerceptronInitializer","l":"PerceptronInitializer()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.perceptron","c":"PerceptronUpdateRule","l":"PerceptronUpdateRule()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"RandomNormalizedWeightInitializer","l":"RandomNormalizedWeightInitializer()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"NeuralNetworkInitializers","l":"randomWeight()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"DelegatedRegime","l":"regime"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Activations","l":"reLU()"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"ReLU","l":"ReLU()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"removeSample(DataSet.Sample)","u":"removeSample(net.tvburger.jdl.model.DataSet.Sample)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"reportObjective()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ObjectiveReportingRegime","l":"reset()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"StopIfNoImprovementRegime","l":"reset()"},{"p":"net.tvburger.jdl.common.utils","c":"Pair","l":"right()"},{"p":"net.tvburger.jdl.model","c":"DataSet.Sample","l":"Sample(float[], float[])","u":"%3Cinit%3E(float[],float[])"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"samples()"},{"p":"net.tvburger.jdl.model.training.loss","c":"ScaledError","l":"ScaledError(float, LossFunction)","u":"%3Cinit%3E(float,net.tvburger.jdl.model.training.loss.LossFunction)"},{"p":"net.tvburger.jdl.common.utils","c":"SimpleHolder","l":"set(K)"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"setBeta1(float)"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"setBeta2(float)"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearModel","l":"setBias(float)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"StopIfNoImprovementRegime","l":"setCurrentStalled(int)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ObjectiveReportingRegime","l":"setDumpingLossValues(boolean)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"EpochRegime","l":"setEpochs(int)"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"setEpsilon(float)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"DumpNodesRegime","l":"setFirstTime(boolean)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Step","l":"setHighValue(float)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"DumpNodesRegime","l":"setIncludeInputs(boolean)"},{"p":"net.tvburger.jdl.model.training","c":"Trainer","l":"setInitializer(Initializer<? super E>)","u":"setInitializer(net.tvburger.jdl.model.training.Initializer)"},{"p":"net.tvburger.jdl.model.training","c":"TrainerImpl","l":"setInitializer(Initializer<? super E>)","u":"setInitializer(net.tvburger.jdl.model.training.Initializer)"},{"p":"net.tvburger.jdl.model.nn","c":"InputNeuron","l":"setInputValue(float)"},{"p":"net.tvburger.jdl.knn","c":"NearestNeighbors","l":"setK(int)"},{"p":"net.tvburger.jdl.adaline","c":"LeastMeanSquares","l":"setLearningRate(float)"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"AdamOptimizer","l":"setLearningRate(float)"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"StochasticGradientDescent","l":"setLearningRate(float)"},{"p":"net.tvburger.jdl.common.utils","c":"Pair","l":"setLeft(L)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Step","l":"setLowValue(float)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"StopIfNoImprovementRegime","l":"setMaxStalledEpochs(int)"},{"p":"net.tvburger.jdl.knn","c":"NearestNeighbors","l":"setMemory(DataSet)","u":"setMemory(net.tvburger.jdl.model.DataSet)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"StopIfNoImprovementRegime","l":"setMinImprovement(float)"},{"p":"net.tvburger.jdl.model.training","c":"Trainer","l":"setObjective(ObjectiveFunction)","u":"setObjective(net.tvburger.jdl.model.training.ObjectiveFunction)"},{"p":"net.tvburger.jdl.model.training","c":"TrainerImpl","l":"setObjective(ObjectiveFunction)","u":"setObjective(net.tvburger.jdl.model.training.ObjectiveFunction)"},{"p":"net.tvburger.jdl.model.training","c":"Trainer","l":"setOptimizer(Optimizer<? super E>)","u":"setOptimizer(net.tvburger.jdl.model.training.Optimizer)"},{"p":"net.tvburger.jdl.model.training","c":"TrainerImpl","l":"setOptimizer(Optimizer<? super E>)","u":"setOptimizer(net.tvburger.jdl.model.training.Optimizer)"},{"p":"net.tvburger.jdl.model.training","c":"TrainableFunction","l":"setParameter(int, float)","u":"setParameter(int,float)"},{"p":"net.tvburger.jdl.model.training","c":"TrainableFunction","l":"setParameters(float[])"},{"p":"net.tvburger.jdl.model.training","c":"Trainer","l":"setRegime(Regime)","u":"setRegime(net.tvburger.jdl.model.training.Regime)"},{"p":"net.tvburger.jdl.model.training","c":"TrainerImpl","l":"setRegime(Regime)","u":"setRegime(net.tvburger.jdl.model.training.Regime)"},{"p":"net.tvburger.jdl.common.utils","c":"Pair","l":"setRight(R)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"MiniBatchRegime","l":"setSamplesPerLearning(int)"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Step","l":"setThreshold(float)"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearModel","l":"setWeight(int, float)","u":"setWeight(int,float)"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearModel","l":"setWeights(float[])"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Activations","l":"sigmoid()"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Sigmoid","l":"Sigmoid()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.common.utils","c":"SimpleHolder","l":"SimpleHolder(K)","u":"%3Cinit%3E(K)"},{"p":"net.tvburger.jdl.model.training.loss","c":"SquaredError","l":"SquaredError()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.training.loss","c":"Losses","l":"sSE()"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Activations","l":"step()"},{"p":"net.tvburger.jdl.model.scalars.activations","c":"Step","l":"Step()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.nn.optimizers","c":"StochasticGradientDescent","l":"StochasticGradientDescent()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"stopIfNoImprovements()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"stopIfNoImprovements(boolean)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"stopIfNoImprovements(int)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"stopIfNoImprovements(int, boolean)","u":"stopIfNoImprovements(int,boolean)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"stopIfNoImprovements(int, float)","u":"stopIfNoImprovements(int,float)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"stopIfNoImprovements(int, float, boolean)","u":"stopIfNoImprovements(int,float,boolean)"},{"p":"net.tvburger.jdl.datasets","c":"StraightLineWithNoise","l":"StraightLineWithNoise()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.common.patterns","c":"DesignPattern.Category","l":"STRUCTURAL"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"subset(int, int)","u":"subset(int,int)"},{"p":"net.tvburger.jdl.model.training.loss","c":"SummedError","l":"SummedError()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model","c":"DataSet.Sample","l":"targetCount()"},{"p":"net.tvburger.jdl.model","c":"DataSet.Sample","l":"targetOutputs()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.Modifiable","l":"targetRegime"},{"p":"net.tvburger.jdl.common.utils","c":"Floats","l":"toBooleans(float[])"},{"p":"net.tvburger.jdl.datasets","c":"LogicalDataSets","l":"toMinusSet(DataSet)","u":"toMinusSet(net.tvburger.jdl.model.DataSet)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.BottomUpChainer","l":"topChain()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime.TopDownChainer","l":"TopDownChainer()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model","c":"DataSet.Sample","l":"toString()"},{"p":"net.tvburger.jdl.model","c":"DataSet","l":"toString()"},{"p":"net.tvburger.jdl.model.nn","c":"ActivationsCachedNeuron.Activation","l":"toString()"},{"p":"net.tvburger.jdl.model.nn","c":"Neuron","l":"toString()"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime","l":"toString()"},{"p":"net.tvburger.jdl.model.training","c":"Trainer","l":"train(E, DataSet)","u":"train(E,net.tvburger.jdl.model.DataSet)"},{"p":"net.tvburger.jdl.model.training","c":"TrainerImpl","l":"train(E, DataSet)","u":"train(E,net.tvburger.jdl.model.DataSet)"},{"p":"net.tvburger.jdl.knn","c":"NearestNeighborsPreparer","l":"train(E, DataSet, ObjectiveFunction, Optimizer<? super E>)","u":"train(E,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction,net.tvburger.jdl.model.training.Optimizer)"},{"p":"net.tvburger.jdl.model.training","c":"Regime","l":"train(E, DataSet, ObjectiveFunction, Optimizer<? super E>)","u":"train(E,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction,net.tvburger.jdl.model.training.Optimizer)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"BatchRegime","l":"train(E, DataSet, ObjectiveFunction, Optimizer<? super E>)","u":"train(E,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction,net.tvburger.jdl.model.training.Optimizer)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ChainedRegime","l":"train(E, DataSet, ObjectiveFunction, Optimizer<? super E>)","u":"train(E,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction,net.tvburger.jdl.model.training.Optimizer)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"DumpNodesRegime","l":"train(E, DataSet, ObjectiveFunction, Optimizer<? super E>)","u":"train(E,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction,net.tvburger.jdl.model.training.Optimizer)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"EpochRegime","l":"train(E, DataSet, ObjectiveFunction, Optimizer<? super E>)","u":"train(E,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction,net.tvburger.jdl.model.training.Optimizer)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"MiniBatchRegime","l":"train(E, DataSet, ObjectiveFunction, Optimizer<? super E>)","u":"train(E,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction,net.tvburger.jdl.model.training.Optimizer)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"ObjectiveReportingRegime","l":"train(E, DataSet, ObjectiveFunction, Optimizer<? super E>)","u":"train(E,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction,net.tvburger.jdl.model.training.Optimizer)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"OnlineRegime","l":"train(E, DataSet, ObjectiveFunction, Optimizer<? super E>)","u":"train(E,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction,net.tvburger.jdl.model.training.Optimizer)"},{"p":"net.tvburger.jdl.model.training.regimes","c":"StopIfNoImprovementRegime","l":"train(E, DataSet, ObjectiveFunction, Optimizer<? super E>)","u":"train(E,net.tvburger.jdl.model.DataSet,net.tvburger.jdl.model.training.ObjectiveFunction,net.tvburger.jdl.model.training.Optimizer)"},{"p":"net.tvburger.jdl.model.training","c":"TrainerImpl","l":"TrainerImpl()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.knn","c":"UniformWeighting","l":"UniformWeighting()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.model.scalars","c":"LinearModel","l":"validDimension(int)"},{"p":"net.tvburger.jdl.common.patterns","c":"DesignPattern","l":"value()"},{"p":"net.tvburger.jdl.common.patterns","c":"Strategy","l":"value()"},{"p":"net.tvburger.jdl.common.patterns","c":"DesignPattern.Category","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"net.tvburger.jdl.common.patterns","c":"Strategy.Role","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"net.tvburger.jdl.common.patterns","c":"DesignPattern.Category","l":"values()"},{"p":"net.tvburger.jdl.common.patterns","c":"Strategy.Role","l":"values()"},{"p":"net.tvburger.jdl.model.nn","c":"NeuronVisitor","l":"visitConnection(NeuralNetwork, Neuron, int, int, Neuron, int, int, float)","u":"visitConnection(net.tvburger.jdl.model.nn.NeuralNetwork,net.tvburger.jdl.model.nn.Neuron,int,int,net.tvburger.jdl.model.nn.Neuron,int,int,float)"},{"p":"net.tvburger.jdl.mlp","c":"XorInitializer","l":"visitNeuron(NeuralNetwork, Neuron, int, int)","u":"visitNeuron(net.tvburger.jdl.model.nn.NeuralNetwork,net.tvburger.jdl.model.nn.Neuron,int,int)"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"NeuralNetworkInitializer","l":"visitNeuron(NeuralNetwork, Neuron, int, int)","u":"visitNeuron(net.tvburger.jdl.model.nn.NeuralNetwork,net.tvburger.jdl.model.nn.Neuron,int,int)"},{"p":"net.tvburger.jdl.model.nn","c":"NeuronVisitor","l":"visitNeuron(NeuralNetwork, Neuron, int, int)","u":"visitNeuron(net.tvburger.jdl.model.nn.NeuralNetwork,net.tvburger.jdl.model.nn.Neuron,int,int)"},{"p":"net.tvburger.jdl.knn","c":"NeighborWeighting","l":"weight(float)"},{"p":"net.tvburger.jdl.knn","c":"UniformWeighting","l":"weight(float)"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"NeuralNetworkInitializers","l":"xavier()"},{"p":"net.tvburger.jdl.model.nn.initializers","c":"XavierInitializer","l":"XavierInitializer()","u":"%3Cinit%3E()"},{"p":"net.tvburger.jdl.datasets","c":"LogicalDataSets","l":"xor()"},{"p":"net.tvburger.jdl.mlp","c":"XorInitializer","l":"XorInitializer()","u":"%3Cinit%3E()"}];updateSearchResults();